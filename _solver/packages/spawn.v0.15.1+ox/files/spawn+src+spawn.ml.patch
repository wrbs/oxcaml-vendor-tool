--- a/src/spawn.ml
+++ b/src/spawn.ml
@@ -1,6 +1,6 @@
 open StdLabels
 
-external is_osx : unit -> bool = "spawn_is_osx" [@@noalloc]
+external is_osx : unit -> bool @@ portable = "spawn_is_osx" [@@noalloc]
 
 let is_osx = is_osx ()
 
@@ -34,7 +34,7 @@ module Unix_backend = struct
         Vfork
 end
 
-module type Env = sig
+module type Env = sig @@ portable
   type t
 
   val of_list : string list -> t
@@ -101,7 +101,7 @@ external spawn_unix :
   -> use_vfork:bool
   -> setpgid:int option
   -> sigprocmask:(Unix.sigprocmask_command * int list) option
-  -> int = "spawn_unix_byte" "spawn_unix"
+  -> int @@ portable = "spawn_unix_byte" "spawn_unix"
 
 external spawn_windows :
      env:Env.t option
@@ -111,7 +111,7 @@ external spawn_windows :
   -> stdin:Unix.file_descr
   -> stdout:Unix.file_descr
   -> stderr:Unix.file_descr
-  -> int = "spawn_windows_byte" "spawn_windows"
+  -> int @@ portable = "spawn_windows_byte" "spawn_windows"
 
 let maybe_quote f =
   if
@@ -168,7 +168,7 @@ let spawn ?env ?(cwd = Working_dir.Inher
   in
   backend ~env ~cwd ~prog ~argv ~stdin ~stdout ~stderr ~use_vfork ~setpgid ~sigprocmask
 
-external safe_pipe : unit -> Unix.file_descr * Unix.file_descr = "spawn_pipe"
+external safe_pipe : unit -> Unix.file_descr * Unix.file_descr @@ portable = "spawn_pipe"
 
 let safe_pipe =
   if Sys.win32 then
