--- a/src/deriving.ml
+++ b/src/deriving.ml
@@ -257,11 +257,11 @@ module Deriver = struct
       str_module_type_decl :
         (structure, module_type_declaration) Generator.t option;
       sig_type_decl :
-        (signature, rec_flag * type_declaration list) Generator.t option;
-      sig_type_ext : (signature, type_extension) Generator.t option;
-      sig_exception : (signature, type_exception) Generator.t option;
+        (signature_item list, rec_flag * type_declaration list) Generator.t option;
+      sig_type_ext : (signature_item list, type_extension) Generator.t option;
+      sig_exception : (signature_item list, type_exception) Generator.t option;
       sig_module_type_decl :
-        (signature, module_type_declaration) Generator.t option;
+        (signature_item list, module_type_declaration) Generator.t option;
       extension :
         (loc:Location.t -> path:string -> core_type -> expression) option;
     }
@@ -587,7 +587,7 @@ let mk_deriving_attr context ~prefix ~su
                  (map1 (many __) ~f:parse_arguments))
       in
       let generators =
-        pexp_tuple (many (generator ()))
+        (pexp_tuple (many (generator ())))
         ||| map (generator ()) ~f:(fun f x -> f [ x ])
       in
       pstr (pstr_eval generators nil ^:: nil))
@@ -679,7 +679,7 @@ let wrap_sig ~loc ~hide ~unused_code_war
   let warnings =
     if
       keep_w60_intf ()
-      || (not (Ignore_unused_warning.binds_module_names#signature sg false))
+      || (not (Ignore_unused_warning.binds_module_names#signature_items sg false))
       || unused_code_warnings
     then warnings
     else 60 :: warnings
