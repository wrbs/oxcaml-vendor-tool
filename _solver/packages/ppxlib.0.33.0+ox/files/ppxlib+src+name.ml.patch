--- a/src/name.ml
+++ b/src/name.ml
@@ -97,8 +97,31 @@ module Allowlisted = struct
         "ocaml.warn_on_literal_pattern";
         "ocaml.warnerror";
         "ocaml.warning";
+        "ocaml.builtin";
+        "ocaml.no_effects";
+        "ocaml.no_coeffects";
+        "ocaml.only_generative_effects";
+        "ocaml.flambda_o2";
+        "ocaml.flambda_o3";
+        "ocaml.flambda_oclassic";
+        "ocaml.local";
+        "ocaml.curry";
+        "ocaml.local_opt";
+        "ocaml.global";
+        "ocaml.nonlocal";
+        "ocaml.tail";
+        "ocaml.nontail";
+        "ocaml.loop";
+        "ocaml.tail_mod_cons";
+        "ocaml.zero_alloc";
+        "ocaml.error_message";
+        "ocaml.layout_poly";
+        "ocaml.no_mutable_implied_modalities";
         "ocaml.toplevel_printer" (*Interpreted by the toplevel/utop*);
         "toplevel_printer" (*Interpreted by the toplevel/utop*);
+        "ocaml.unsafe_allow_any_mode_crossing";
+        "ocaml.or_null_reexport";
+        "ocaml.atomic";
       ]
 
   (* Allow list the following extensions.
@@ -107,7 +130,16 @@ module Allowlisted = struct
      at the level of a ppx rewriter that they have been properly interpreted, so
      we just accept them anywhere.
   *)
-  let extensions = create_set [ "ocaml.error"; "ocaml.extension_constructor" ]
+  let extensions =
+    create_set
+      [ "ocaml.error"
+      ; "ocaml.extension_constructor"
+      ; "ocaml.probe"
+      ; "ocaml.probe_is_enabled"
+      ; "ocaml.src_pos"
+      ; "ocaml.call_pos"
+      ; "ocaml.atomic.loc"
+      ]
 
   let is_allowlisted ~kind name =
     match kind with
@@ -166,6 +198,8 @@ module Reserved_namespaces = struct
   let () = reserve "metaocaml"
   let () = reserve "ocamlformat"
   let () = reserve "ppxlib.migration"
+  let () = reserve "extension" (* deprecated namespace for jane street syntax *)
+  let () = reserve "jane" (* jane street syntax *)
 
   let check_not_reserved ~kind name =
     let kind, list =
@@ -185,8 +219,13 @@ module Reserved_namespaces = struct
         kind name
 end
 
+(* These attributes may be auto-inserted by the parser *)
+let autogenerated_attributes =
+  String.Set.of_list ["ocaml.local"; "ocaml.global"; "ocaml.nonlocal"; "ocaml.curry"]
+
 let ignore_checks name =
   Reserved_namespaces.is_in_reserved_namespaces name
+  || String.Set.mem name autogenerated_attributes
   || String.is_prefix name ~prefix:"_"
 
 module Registrar = struct
