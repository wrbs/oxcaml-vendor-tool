--- a/compiler/lib/ocaml_compiler.ml
+++ b/compiler/lib/ocaml_compiler.ml
@@ -20,17 +20,16 @@
 
 let rec constant_of_const c : Code.constant =
   let open Lambda in
-  let open Asttypes in
   match c with
   | Const_base (Const_int i) -> Int (Targetint.of_int_warning_on_overflow i)
   | Const_base (Const_char c) -> Int (Targetint.of_int_exn (Char.code c))
   | Const_base (Const_string (s, _, _)) -> String s
-  | Const_base (Const_float s) -> Float (Int64.bits_of_float (float_of_string s))
-  | Const_base (Const_int32 i) -> Int32 i
-  | Const_base (Const_int64 i) -> Int64 i
-  | Const_base (Const_nativeint i) -> NativeInt (Int32.of_nativeint_warning_on_overflow i)
+  | Const_base (Const_float32 s | Const_unboxed_float32 s | Const_float s | Const_unboxed_float s) -> Float (Int64.bits_of_float (float_of_string s))
+  | Const_base (Const_int32 i | Const_unboxed_int32 i) -> Int32 i
+  | Const_base (Const_int64 i | Const_unboxed_int64 i) -> Int64 i
+  | Const_base (Const_nativeint i | Const_unboxed_nativeint i) -> NativeInt (Int32.of_nativeint_warning_on_overflow i)
   | Const_immstring s -> String s
-  | Const_float_array sl ->
+  | Const_float_array sl | Const_float_block sl ->
       let l = List.map ~f:(fun f -> Int64.bits_of_float (float_of_string f)) sl in
       Float_array (Array.of_list l)
   | Const_block (tag, l) ->
