--- a/runtime/js/float32.js
+++ b/runtime/js/float32.js
@@ -346,16 +346,74 @@
     return Math.fround(Math.trunc(x));
 }
 
-//Provides: caml_simd_float32_round_neg_inf_bytecode const
-function caml_simd_float32_round_neg_inf_bytecode(x) {
-    return Math.fround(Math.floor(x));
+//Provides: caml_make_unboxed_float32_vect_bytecode const (const)
+//Requires: caml_make_float_vect
+let caml_make_unboxed_float32_vect_bytecode = caml_make_float_vect
+
+//Provides: caml_ba_float32_get_1
+//Requires: caml_ba_get_1
+let caml_ba_float32_get_1 = caml_ba_get_1
+
+//Provides: caml_ba_float32_get_2
+//Requires: caml_ba_get_2
+let caml_ba_float32_get_2 = caml_ba_get_2
+
+//Provides: caml_ba_float32_get_3
+//Requires: caml_ba_get_3
+let caml_ba_float32_get_3 = caml_ba_get_3
+
+//Provides: caml_ba_float32_set_1
+//Requires: caml_ba_set_1
+let caml_ba_float32_set_1 = caml_ba_set_1
+
+//Provides: caml_ba_float32_set_2
+//Requires: caml_ba_set_2
+let caml_ba_float32_set_2 = caml_ba_set_2
+
+//Provides: caml_ba_float32_set_3
+//Requires: caml_ba_set_3
+let caml_ba_float32_set_3 = caml_ba_set_3
+
+//Provides: caml_ba_uint8_getf32
+//Requires: caml_ba_uint8_get32, caml_int32_float_of_bits
+function caml_ba_uint8_getf32(ba, i0) {
+    return caml_int32_float_of_bits(caml_ba_uint8_get32(ba, i0));
 }
 
-//Provides: caml_simd_float32_round_pos_inf_bytecode const
-function caml_simd_float32_round_pos_inf_bytecode(x) {
-    return Math.fround(Math.ceil(x));
+//Provides: caml_ba_uint8_setf32
+//Requires: caml_ba_uint8_set32, caml_int32_bits_of_float
+function caml_ba_uint8_setf32(ba, i0, v) {
+    return caml_ba_uint8_set32(ba, i0, caml_int32_bits_of_float(v));
+}
+
+//Provides: caml_string_getf32
+//Requires: caml_string_get32, caml_int32_float_of_bits
+function caml_string_getf32(s, i) {
+    return caml_int32_float_of_bits(caml_string_get32(s, i));
+}
+
+//Provides: caml_bytes_getf32
+//Requires: caml_bytes_get32, caml_int32_float_of_bits
+function caml_bytes_getf32(s, i) {
+    return caml_int32_float_of_bits(caml_bytes_get32(s, i));
 }
 
-//Provides: caml_simd_float32_round_towards_zero_bytecode const
-function caml_simd_float32_round_towards_zero_bytecode(x) {
-    return Math.fround(Math.trunc(x));
+//Provides: caml_bytes_setf32
+//Requires: caml_bytes_set32, caml_int32_bits_of_float
+function caml_bytes_setf32(s, i, f32) {
+    return caml_bytes_set32(s, i, caml_int32_bits_of_float(f32));
+}
+
+//Provides: caml_string_setf32
+//Requires: caml_failwith
+//If: js-string
+function caml_string_setf32(s, i, f32) {
+    caml_failwith("caml_string_setf32");
+}
+
+//Provides: caml_string_setf32
+//Requires: caml_bytes_setf32
+//If: !js-string
+function caml_string_setf32(s, i, f32) {
+    return caml_bytes_setf32(s, i, f32);
+}
